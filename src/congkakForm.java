import javax.swing.JButton;
import java.util.Random;
import java.lang.Math;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import sun.audio.*; 
import java.io.*;
import javafx.embed.swing.JFXPanel;
import javafx.scene.media.Media;
import javafx.scene.media.MediaPlayer;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author AyeChan
 */

public class congkakForm extends javax.swing.JFrame {

    /**
     * Creates new form congkakForm
     */
    static int player = 2;

    static boolean aiStart = false;

   static int takeSeed=0; 
   
   static boolean MusicPlay = true;
   
   JButton button[] = new JButton[14]; //Make you button becomes global for easy calling
       
   /*READ THIS!!!!!!!!!!!! WARNING FROM AZIZI
   Not so warning la just got some message for AI part
   If got logic wrong or anything you don't like, just update or change la ok, up to you guys
   Basically your program is done for player1
   But I don't do for player2 or AI, but that one is not so hard tho
   Create a new method to change player when the first player dies and back to player1 if the AI dies
   Then create a new method for AI to pick a random hole which is not zero and calls the updateSeed class with the correct parameters
   REMEMBER, each parameters for updateSeedClass must be correct, if not, your program will be haywire
   Not so haywire la, but the algorithm all lari edy la. Hahahaha
   You can set also the AI choose random or choose the highest seeds count or lowest, up to you la
   That's all. Goodluck reading the code, I also reduce the lines by like 700 lines for easier you want to read
   Alright, goodluck!!
   ONE MORE! REMEMBER TO DELETE THIS COMMENTS AH! HAHAHAHA*/
      
    public congkakForm() {
        initComponents();
        
        button[0] = hole1;
        button[1] = hole2;
        button[2] = hole3;
        button[3] = hole4;
        button[4] = hole5;
        button[5] = hole6;
        button[6] = hole7;
        button[7] = hole8;
        button[8] = hole9;
        button[9] = hole10;
        button[10] = hole11;
        button[11] = hole12;
        button[12] = hole13;
        button[13] = hole14;
    }
    
       
    public  void setHoles(){
        JButton p2[] = new JButton[7];
        

        p2[0]=hole8;
        p2[1]=hole9;
        p2[2]=hole10;
        p2[3]=hole11;
        p2[4]=hole12;
        p2[5]=hole13;
        p2[6]=hole14;
        
        
         for(int i=0; i<7; i++){
            
            
            p2[i].setEnabled(false);

           }
          for(int i=0; i<7; i++){
            
            
            button[i].setEnabled(true);

           }
        
        }
        
    public void endGame(){
        if((congkakAlgorithm.holes[0] == 0 && congkakAlgorithm.holes[1] == 0 && congkakAlgorithm.holes[2] == 0 && congkakAlgorithm.holes[3] == 0 && congkakAlgorithm.holes[4] == 0 && congkakAlgorithm.holes[5] == 0 && congkakAlgorithm.holes[6] ==0)  
                ||(congkakAlgorithm.holes[7] == 0 && congkakAlgorithm.holes[8] == 0 && congkakAlgorithm.holes[9] == 0 && congkakAlgorithm.holes[10] == 0 && congkakAlgorithm.holes[11] == 0 && congkakAlgorithm.holes[12] == 0 && congkakAlgorithm.holes[13] ==0) )
        {   
            
            if(congkakAlgorithm.storeHouseP1>congkakAlgorithm.storeHouseP2){
                
                JOptionPane.showMessageDialog(this, "Congratulations Player 1!! You are the winner!!!",
                    "P1 winner!", JOptionPane.INFORMATION_MESSAGE);
                
                
            }
            else if(congkakAlgorithm.storeHouseP1<congkakAlgorithm.storeHouseP2){
                
                JOptionPane.showMessageDialog(this, "Congratulations Player 2!! You are the winner!!!",
                    "P2 winner!", JOptionPane.INFORMATION_MESSAGE);
                
            }
            else if(congkakAlgorithm.storeHouseP1==congkakAlgorithm.storeHouseP2){
                
                JOptionPane.showMessageDialog(this, "Wow! What are the chances?!! It's a draw! ",
                    "Draw", JOptionPane.INFORMATION_MESSAGE);
                
            }
            
            PvP.doClick();
        }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        ChangeSeed = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        MusicButton = new javax.swing.JButton();
        ChangeSeedButton = new javax.swing.JButton();
        BoardBrown = new javax.swing.JButton();
        BoardBlue = new javax.swing.JButton();
        BoardYellow = new javax.swing.JButton();
        BoardPink = new javax.swing.JButton();
        PvP = new javax.swing.JButton();
        Easy = new javax.swing.JButton();
        Hard = new javax.swing.JButton();
        hole14 = new javax.swing.JButton();
        hole13 = new javax.swing.JButton();
        hole12 = new javax.swing.JButton();
        hole11 = new javax.swing.JButton();
        hole10 = new javax.swing.JButton();
        hole9 = new javax.swing.JButton();
        hole8 = new javax.swing.JButton();
        hole1 = new javax.swing.JButton();
        hole2 = new javax.swing.JButton();
        hole3 = new javax.swing.JButton();
        hole4 = new javax.swing.JButton();
        hole5 = new javax.swing.JButton();
        hole6 = new javax.swing.JButton();
        hole7 = new javax.swing.JButton();
        StoreHouseP1 = new javax.swing.JLabel();
        StoreHouseP2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Congkak");
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        getContentPane().add(ChangeSeed, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 30, 160, 30));

        jLabel2.setText("Enter Seed Number:");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, -1, -1));

        MusicButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Music.png"))); // NOI18N
        MusicButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MusicButtonActionPerformed(evt);
            }
        });
        getContentPane().add(MusicButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 290, 70, 50));

        ChangeSeedButton.setText("Change");
        ChangeSeedButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ChangeSeedButtonActionPerformed(evt);
            }
        });
        getContentPane().add(ChangeSeedButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 30, -1, -1));

        BoardBrown.setText("Board - Brown");
        BoardBrown.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BoardBrownActionPerformed(evt);
            }
        });
        getContentPane().add(BoardBrown, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 300, -1, -1));

        BoardBlue.setText("Board - Blue");
        BoardBlue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BoardBlueActionPerformed(evt);
            }
        });
        getContentPane().add(BoardBlue, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 300, -1, -1));

        BoardYellow.setText("Board-Yellow");
        BoardYellow.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BoardYellowActionPerformed(evt);
            }
        });
        getContentPane().add(BoardYellow, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 300, -1, -1));

        BoardPink.setText("Board - Pink");
        BoardPink.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BoardPinkActionPerformed(evt);
            }
        });
        getContentPane().add(BoardPink, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 300, -1, -1));

        PvP.setText("Player Vs Player");
        PvP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PvPActionPerformed(evt);
            }
        });
        getContentPane().add(PvP, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 10, 120, 50));

        Easy.setText("Ai - Easy");
        Easy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EasyActionPerformed(evt);
            }
        });
        getContentPane().add(Easy, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 10, 120, 50));

        Hard.setText("Ai - Hard");
        Hard.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HardActionPerformed(evt);
            }
        });
        getContentPane().add(Hard, new org.netbeans.lib.awtextra.AbsoluteConstraints(575, 10, 120, 50));

        hole14.setText(String.valueOf(congkakAlgorithm.holes[13]));
        hole14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hole14ActionPerformed(evt);
            }
        });
        getContentPane().add(hole14, new org.netbeans.lib.awtextra.AbsoluteConstraints(115, 115, 50, 40));

        hole13.setText(String.valueOf(congkakAlgorithm.holes[12]));
        hole13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hole13ActionPerformed(evt);
            }
        });
        getContentPane().add(hole13, new org.netbeans.lib.awtextra.AbsoluteConstraints(185, 115, 50, 40));

        hole12.setText(String.valueOf(congkakAlgorithm.holes[11]));
        hole12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hole12ActionPerformed(evt);
            }
        });
        getContentPane().add(hole12, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 115, 50, 40));

        hole11.setText(String.valueOf(congkakAlgorithm.holes[10]));
        hole11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hole11ActionPerformed(evt);
            }
        });
        getContentPane().add(hole11, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 115, 50, 40));

        hole10.setText(String.valueOf(congkakAlgorithm.holes[9]));
        hole10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hole10ActionPerformed(evt);
            }
        });
        getContentPane().add(hole10, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 115, 50, 40));

        hole9.setText(String.valueOf(congkakAlgorithm.holes[8]));
        hole9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hole9ActionPerformed(evt);
            }
        });
        getContentPane().add(hole9, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 115, 50, 40));

        hole8.setText(String.valueOf(congkakAlgorithm.holes[7]));
        hole8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hole8ActionPerformed(evt);
            }
        });
        getContentPane().add(hole8, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 115, 50, 40));

        hole1.setText(String.valueOf(congkakAlgorithm.holes[0]));
        hole1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hole1ActionPerformed(evt);
            }
        });
        getContentPane().add(hole1, new org.netbeans.lib.awtextra.AbsoluteConstraints(115, 225, 50, 40));

        hole2.setText(String.valueOf(congkakAlgorithm.holes[1]));
        hole2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hole2ActionPerformed(evt);
            }
        });
        getContentPane().add(hole2, new org.netbeans.lib.awtextra.AbsoluteConstraints(185, 225, 50, 40));

        hole3.setText(String.valueOf(congkakAlgorithm.holes[2]));
        hole3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hole3ActionPerformed(evt);
            }
        });
        getContentPane().add(hole3, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 225, 50, 40));

        hole4.setText(String.valueOf(congkakAlgorithm.holes[3]));
        hole4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hole4ActionPerformed(evt);
            }
        });
        getContentPane().add(hole4, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 225, 50, 40));

        hole5.setText(String.valueOf(congkakAlgorithm.holes[4]));
        hole5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hole5ActionPerformed(evt);
            }
        });
        getContentPane().add(hole5, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 225, 50, 40));

        hole6.setText(String.valueOf(congkakAlgorithm.holes[5]));
        hole6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hole6ActionPerformed(evt);
            }
        });
        getContentPane().add(hole6, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 225, 50, 40));

        hole7.setText(String.valueOf(congkakAlgorithm.holes[6]));
        hole7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hole7ActionPerformed(evt);
            }
        });
        getContentPane().add(hole7, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 225, 50, 40));

        StoreHouseP1.setForeground(new java.awt.Color(255, 255, 255));
        StoreHouseP1.setText("StoreHouseP1");
        getContentPane().add(StoreHouseP1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 140, 100, 80));

        StoreHouseP2.setForeground(new java.awt.Color(255, 255, 255));
        StoreHouseP2.setText("StoreHouseP2");
        getContentPane().add(StoreHouseP2, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 130, -1, 90));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/congkakBoard.png"))); // NOI18N
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 720, 339));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
    
 
    private void hole1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hole1ActionPerformed
        //The code for each hole will be the same like this
        //You just need to change the holeIndex according to the hole
        //For example hole1 index is 0, hole2 is 1 ... hole14 index is 13
        int holeIndex = 0;
        //I didn't disturb your congkakAlgorithm.java much, so get the seed count on each hole like you did before
        int a = congkakAlgorithm.holes[holeIndex]; //4
        
        //Called updateSeed class. See class for details
        //Put the parameters needed. From left, the list of the buttons, the holeIndex, the seedCount for the hole and the storehouse
        UpdateSeed us = new UpdateSeed(button, holeIndex, a, StoreHouseP1,StoreHouseP2);
        //us.start() will start the animation every 500 milliseconds. See updateSeed class for details
        endGame();
        us.start();
    }//GEN-LAST:event_hole1ActionPerformed
    
    private void hole6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hole6ActionPerformed
        int holeIndex = 5;
        int a = congkakAlgorithm.holes[holeIndex]; //4
        
        UpdateSeed us = new UpdateSeed(button, holeIndex, a, StoreHouseP1,StoreHouseP2);
        endGame();
        us.start();
    }//GEN-LAST:event_hole6ActionPerformed

    private void hole10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hole10ActionPerformed
        int holeIndex = 9;
        int a = congkakAlgorithm.holes[holeIndex]; //4
        
        UpdateSeed us = new UpdateSeed(button, holeIndex, a, StoreHouseP1,StoreHouseP2);
        endGame();
        us.start();
    }//GEN-LAST:event_hole10ActionPerformed

    private void hole14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hole14ActionPerformed
        int holeIndex = 13;
        int a = congkakAlgorithm.holes[holeIndex]; //4
        
        UpdateSeed us = new UpdateSeed(button, holeIndex, a, StoreHouseP1,StoreHouseP2);
        endGame();
        us.start();    
    }//GEN-LAST:event_hole14ActionPerformed

    private void hole11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hole11ActionPerformed
        int holeIndex = 10;
        int a = congkakAlgorithm.holes[holeIndex]; //4
        
        UpdateSeed us = new UpdateSeed(button, holeIndex, a, StoreHouseP1,StoreHouseP2);
        endGame();
        us.start(); 
    }//GEN-LAST:event_hole11ActionPerformed

    private void hole2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hole2ActionPerformed
        int holeIndex = 1;
        int a = congkakAlgorithm.holes[holeIndex]; //4
        
        UpdateSeed us = new UpdateSeed(button, holeIndex, a, StoreHouseP1,StoreHouseP2);
        endGame();
        us.start();
    }//GEN-LAST:event_hole2ActionPerformed

    private void hole3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hole3ActionPerformed
        int holeIndex = 2;
        int a = congkakAlgorithm.holes[holeIndex]; //4
        
        UpdateSeed us = new UpdateSeed(button, holeIndex, a, StoreHouseP1,StoreHouseP2);
        endGame();
        us.start();
    }//GEN-LAST:event_hole3ActionPerformed

    private void hole4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hole4ActionPerformed
        int holeIndex = 3;
        int a = congkakAlgorithm.holes[holeIndex]; //4
        
        UpdateSeed us = new UpdateSeed(button, holeIndex, a, StoreHouseP1,StoreHouseP2);
        endGame();
        us.start();
    }//GEN-LAST:event_hole4ActionPerformed

    private void hole5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hole5ActionPerformed
        int holeIndex = 4;
        int a = congkakAlgorithm.holes[holeIndex]; //4
        
        UpdateSeed us = new UpdateSeed(button, holeIndex, a, StoreHouseP1,StoreHouseP2);
        endGame();
        us.start();
    }//GEN-LAST:event_hole5ActionPerformed

    private void hole12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hole12ActionPerformed
        int holeIndex = 11;
        int a = congkakAlgorithm.holes[holeIndex]; //4
        
        UpdateSeed us = new UpdateSeed(button, holeIndex, a, StoreHouseP1,StoreHouseP2);
        endGame();
        us.start();
    }//GEN-LAST:event_hole12ActionPerformed

    private void hole7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hole7ActionPerformed
        int holeIndex = 6;
        int a = congkakAlgorithm.holes[holeIndex]; //4
        
        UpdateSeed us = new UpdateSeed(button, holeIndex, a, StoreHouseP1,StoreHouseP2);
        endGame();
        us.start();
    }//GEN-LAST:event_hole7ActionPerformed

    private void hole8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hole8ActionPerformed
        int holeIndex = 7;
        int a = congkakAlgorithm.holes[holeIndex]; //4
        
        UpdateSeed us = new UpdateSeed(button, holeIndex, a, StoreHouseP1,StoreHouseP2);
        endGame();
        us.start();
    }//GEN-LAST:event_hole8ActionPerformed

    private void hole9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hole9ActionPerformed
        int holeIndex = 8;
        int a = congkakAlgorithm.holes[holeIndex]; //4
        
        UpdateSeed us = new UpdateSeed(button, holeIndex, a, StoreHouseP1,StoreHouseP2);
        endGame();
        us.start();
    }//GEN-LAST:event_hole9ActionPerformed

    private void hole13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hole13ActionPerformed
        int holeIndex = 12;
        int a = congkakAlgorithm.holes[holeIndex]; //4
        
        UpdateSeed us = new UpdateSeed(button, holeIndex, a, StoreHouseP1,StoreHouseP2);
        endGame();
        us.start();
    }//GEN-LAST:event_hole13ActionPerformed

    
    private void PvPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PvPActionPerformed
       
        congkakAlgorithm.initializeHoles();
        for(int counter = 0; counter < 14; counter ++)
        button[counter].setText(String.valueOf(congkakAlgorithm.holes[counter]));
        player = 2;
        setHoles();
        
        congkakAlgorithm.storeHouseP1 = 0;
        StoreHouseP1.setText("StoreHouseP1: \n"+congkakAlgorithm.storeHouseP1);
        congkakAlgorithm.storeHouseP2 = 0;
        StoreHouseP2.setText("StoreHouseP2: \n"+congkakAlgorithm.storeHouseP2);
   

    }//GEN-LAST:event_PvPActionPerformed

    public static int randInt(int min, int max) {

    // Usually this can be a field rather than a method variable
    Random rand = new Random();

    // nextInt is normally exclusive of the top value,
    // so add 1 to make it inclusive
    int randomNum = rand.nextInt((max - min) + 1) + min;

    return randomNum;
}
    
    public void clickEasy(){
        Easy.doClick();
    }
    
    private void EasyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EasyActionPerformed
        
        aiStart = true;
         
        int a = randInt(7,13);
      
        
        System.out.println(a); //shows the number ai chose
        if(a==7){
             
             if(congkakAlgorithm.holes[7] == 0){
                 if(hole8.isEnabled()==false){
                     Easy.doClick();
                 }
             }
             else 
                 hole8.doClick();
        }
        if(a==8){
            
            if(congkakAlgorithm.holes[8] == 0){
        
                     Easy.doClick();
                
            }
            else 
                hole9.doClick();
        }
        if(a==9){
             
            if(congkakAlgorithm.holes[9]==0){
                    
                     Easy.doClick();
                 
                 }
             else 
                 hole10.doClick();
        }
        if(a==10){
             
             if(congkakAlgorithm.holes[10] == 0){
              
                     Easy.doClick();
                 
             }
             else
                 hole11.doClick();
        }
        if(a==11){
             
             if(congkakAlgorithm.holes[11] == 0){
          
                     Easy.doClick();
                 
             }
             else 
                 hole12.doClick();
        }
        if(a==12){
             
             if(congkakAlgorithm.holes[12] == 0){
               
                     Easy.doClick();
                 
             }
             else 
                 hole13.doClick();
        }
        if(a==13){
             
             if(congkakAlgorithm.holes[13] == 0){
             
                     Easy.doClick();
                 
             }
             else 
                 hole14.doClick();
        }
      
        
        
       
        
    }//GEN-LAST:event_EasyActionPerformed

    private void HardActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HardActionPerformed
        int h8 = congkakAlgorithm.holes[7];
        int h9 = congkakAlgorithm.holes[8];
        int h10 = congkakAlgorithm.holes[9];
        int h11 = congkakAlgorithm.holes[10];
        int h12 = congkakAlgorithm.holes[11];
        int h13 = congkakAlgorithm.holes[12];
        int h14 = congkakAlgorithm.holes[13];
        
        int max = Math.max(h8,Math.max(h9,Math.max(h10,Math.max(h11,Math.max(h12,Math.max(h13,h14))))));
        
        if (max == h8){
            hole8.doClick();
        }
        if (max == h9){
            hole9.doClick();
        }
        if (max == h10){
            hole10.doClick();
        }
        if (max == h11){
            hole11.doClick();
        }
        if (max == h12){
            hole12.doClick();
        }
        if (max == h13){
            hole13.doClick();
        }
        if (max == h14){
            hole14.doClick();
        }
        
    }//GEN-LAST:event_HardActionPerformed

    private void BoardBlueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BoardBlueActionPerformed
         ImageIcon I1 = new ImageIcon(getClass().getResource("/Images/congkakBoard(blue).png"));
         jLabel1.setIcon(I1);
    }//GEN-LAST:event_BoardBlueActionPerformed

    private void BoardBrownActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BoardBrownActionPerformed
        ImageIcon I1 = new ImageIcon(getClass().getResource("/Images/congkakBoard.png"));
        jLabel1.setIcon(I1);
    }//GEN-LAST:event_BoardBrownActionPerformed

    private void BoardPinkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BoardPinkActionPerformed
         ImageIcon I1 = new ImageIcon(getClass().getResource("/Images/congkakBoard(pink).png"));
        jLabel1.setIcon(I1);
    }//GEN-LAST:event_BoardPinkActionPerformed

    private void BoardYellowActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BoardYellowActionPerformed
         ImageIcon I1 = new ImageIcon(getClass().getResource("/Images/congkakBoard(yellow).png"));
        jLabel1.setIcon(I1);
    }//GEN-LAST:event_BoardYellowActionPerformed

    private void ChangeSeedButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ChangeSeedButtonActionPerformed
        int seed;
        try {
            seed = Integer.parseInt(
                    this.ChangeSeed.getText());
            
            if(seed>0 && seed<11){
            congkakAlgorithm.initializeHolesChangeSeed(seed);
            for(int counter = 0; counter < 14; counter ++)
                button[counter].setText(String.valueOf(congkakAlgorithm.holes[counter]));
                player = 2;
                setHoles();

                congkakAlgorithm.storeHouseP1 = 0;
                StoreHouseP1.setText("StoreHouseP1: \n"+congkakAlgorithm.storeHouseP1);
                congkakAlgorithm.storeHouseP2 = 0;
                StoreHouseP2.setText("StoreHouseP2: \n"+congkakAlgorithm.storeHouseP2);
            }
            else{
                 JOptionPane.showMessageDialog(this, "Please enter a seed number which is between 1 and 10",
                    "Error", JOptionPane.ERROR_MESSAGE);
            }

            
            for(int counter = 0; counter < 14; counter ++)
            button[counter].setText(String.valueOf(congkakAlgorithm.holes[counter]));
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Enter a number in the change seed field first",
                    "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
    }//GEN-LAST:event_ChangeSeedButtonActionPerformed

    private void MusicButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MusicButtonActionPerformed
 
        try{
        
        JFXPanel j = new JFXPanel();
        Media uri = new Media(new File("src/media/BackgroundMusic.mp3").toURI().toString());
        
        MediaPlayer mP = new MediaPlayer(uri);
        if(MusicPlay == true){
            mP.play();
            MusicPlay = false;
        }
        else if(MusicPlay == false){
            mP.stop();
            MusicPlay = true;
        }

        }catch(Exception ex){
            JOptionPane.showMessageDialog(null,ex);
        }
        
    }//GEN-LAST:event_MusicButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(congkakForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(congkakForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(congkakForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(congkakForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
       congkakAlgorithm.initializeHoles();
       
        
       congkakForm congkak = new congkakForm();
       congkak.setHoles();
        
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
            
                congkak.setVisible(true);
                 
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BoardBlue;
    private javax.swing.JButton BoardBrown;
    private javax.swing.JButton BoardPink;
    private javax.swing.JButton BoardYellow;
    private javax.swing.JTextField ChangeSeed;
    private javax.swing.JButton ChangeSeedButton;
    private javax.swing.JButton Easy;
    private javax.swing.JButton Hard;
    private javax.swing.JButton MusicButton;
    private javax.swing.JButton PvP;
    private javax.swing.JLabel StoreHouseP1;
    private javax.swing.JLabel StoreHouseP2;
    public javax.swing.JButton hole1;
    public javax.swing.JButton hole10;
    public javax.swing.JButton hole11;
    public javax.swing.JButton hole12;
    public javax.swing.JButton hole13;
    public javax.swing.JButton hole14;
    public javax.swing.JButton hole2;
    public javax.swing.JButton hole3;
    public javax.swing.JButton hole4;
    public javax.swing.JButton hole5;
    public javax.swing.JButton hole6;
    public javax.swing.JButton hole7;
    public javax.swing.JButton hole8;
    public javax.swing.JButton hole9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    // End of variables declaration//GEN-END:variables

}
